Name,Opcode,Description,Bytes,Cycles,Carry,Zero,Text
NOP,0x00,no operation,1,3,,,
OUT,0x01,output A,1,3,,,
LAI,0x02,load A immediate,2,4,,,
LAM,0x03,load A from memory,2,5,,,
SAM,0x04,store A to memory,2,5,,,
TAS,0x05,transfer A to SP,1,3,,,
TSA,0x06,transfer SP to A,1,3,,,
INA,0x07,increment A,1,4,set if wrap to zero,set if wrap to zero,
DCA,0x08,decrement A,1,4,set if wrap past zero,set if wrap to zero,
NOT,0x09,NOT A,1,4,undetermined,set if zero,
ASL,0x0a,arithmetic shift left A,1,4,set if A overflows,set if zero,
TST,0x0b,test A,1,4,set if A is negative,set if A is zero,Test A for sign and zero.  Carry flag becomes a minus flag (A<0) and zero flag indicates A=0.
CLC,0x0c,clear carry flag,1,3,clear,set,Clear carry flag.  Zero flag is set.
SEC,0x0d,set carry flag,1,3,set,clear,Set carry flag. Zero flag is cleared.
JMP,0x10,jump unconditional,2,4,,,
JC,0x11,jump on Carry,2,4,,,
JZ,0x12,jump on Zero,2,4,,,
JNC,0x13,jump on no Carry,2,4,,,
JNZ,0x14,jump on no Zero,2,4,,,
PHA,0x15,push A,1,4,,,Push processor status (flags) on to the stack.  SP is decremented.
PLA,0x16,pull A,1,5,,,Pull accumulator from the stack.  SP is incremented.
JSR,0x17,jump to subroutine,2,7,,,
RTS,0x18,return from subroutine,1,5,,,
ADI,0x20,add  immediate to A,2,,set if A overflows,set if zero,
ADM,0x21,add memory to A,2,,set if A overflows,set if zero,
SBI,0x22,subtract immediate from A,2,,set if A underflows,set if zero,
SBM,0x23,subtract memory from A,2,,set if A underflows,set if zero,
ACI,0x24,add immediate to A with carry,2,,set if A overflows,set if zero,
ACM,0x25,add memory to A with carry,2,,set if A overflows,set if zero,
SCI,0x26,subtract immediate from A with borrow,2,,set if A underflows,set if zero,
SCM,0x27,subtract memory from A with borrow,2,,set if A underflows,set if zero,
CPI,0x28,compare immediate to A,2,,set if A < value,set if equal,
CPM,0x29,compare memory to A,2,,set if A < value,set if equal,